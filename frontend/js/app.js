// JAN Delivery - Main Application
class App {
  constructor() {
    this.currentPage = 'menu';
    this.isInitialized = false;
    
    this.init();
  }

  async init() {
    utils.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');

    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è i18n
      await window.i18n.init();
      
      // –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Telegram WebApp
      await this.waitForTelegram();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      this.initElements();
      
      // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
      this.bindEvents();
      
      // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await this.registerUser();
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ API
      await this.checkApiHealth();
      
      // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      await this.loadInitialData();
      
      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
      this.updateUI();
      
      // –°–∫—Ä—ã—Ç—å —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
      this.hideLoadingScreen();
      
      this.isInitialized = true;
      utils.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
      
    } catch (error) {
      utils.logError('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
      this.showInitError(error);
    }
  }

  async waitForTelegram() {
    return new Promise((resolve) => {
      if (telegram.isWebAppReady()) {
        resolve();
      } else {
        const checkInterval = setInterval(() => {
          if (telegram.isWebAppReady()) {
            clearInterval(checkInterval);
            resolve();
          }
        }, 100);
        
        // –¢–∞–π–º–∞—É—Ç –Ω–∞ 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
        setTimeout(() => {
          clearInterval(checkInterval);
          utils.log('Telegram WebApp timeout - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏');
          // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º mock —Ä–µ–∂–∏–º –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
          if (!telegram.isWebAppReady()) {
            telegram.mockTelegramForDevelopment();
          }
          resolve();
        }, 2000);
      }
    });
  }

  initElements() {
    this.loadingScreen = document.getElementById('loading-screen');
    this.header = document.getElementById('header');
    this.nav = document.getElementById('nav');
    this.mainContent = document.getElementById('main-content');
    this.userNameSpan = document.getElementById('user-name');
    this.pages = document.querySelectorAll('.page');
    this.navButtons = document.querySelectorAll('.nav-btn');
  }

  bindEvents() {
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è
    this.nav?.addEventListener('click', (e) => {
      if (e.target.classList.contains('nav-btn')) {
        telegram.hapticFeedback('selection');
        this.showPage(e.target.dataset.page);
      }
    });

    // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–æ–≤
    document.addEventListener('click', (e) => {
      if (e.target.classList.contains('language-btn')) {
        telegram.hapticFeedback('selection');
        const lang = e.target.dataset.lang;
        if (lang) {
          window.i18n.setLanguage(lang);
        }
      }
    });

    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    window.addEventListener('languageChanged', (e) => {
      this.updateDynamicContent(e.detail.language);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    window.addEventListener('error', (e) => {
      utils.logError('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', e.error);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤
    window.addEventListener('unhandledrejection', (e) => {
      utils.logError('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –ø—Ä–æ–º–∏—Å:', e.reason);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.addEventListener('visibilitychange', () => {
      if (!document.hidden && this.isInitialized) {
        this.onAppVisible();
      }
    });
  }

  async registerUser() {
    const user = telegram.getUser();
    if (!user || !user.id) {
      utils.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ—Ç ID, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é');
      return;
    }

    try {
      await api.createOrUpdateUser({
        userId: user.id,
        first_name: user.first_name || '',
        last_name: user.last_name || '',
        username: user.username || '',
        language_code: user.language_code || 'ru'
      });
      
      const displayName = user.first_name || user.username || `ID: ${user.id}`;
      utils.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', displayName);
    } catch (error) {
      utils.logError('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    }
  }

  async checkApiHealth() {
    try {
      const isHealthy = await api.checkHealth();
      if (!isHealthy) {
        throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
      utils.log('API –¥–æ—Å—Ç—É–ø–µ–Ω');
    } catch (error) {
      utils.logError('API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error);
      utils.showToast('–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–µ—Ä—É', 'warning');
    }
  }

  async loadInitialData() {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    const promises = [
      menuManager.loadMenu(),
      cart.updateCartDisplay()
    ];

    const user = telegram.getUser();
    if (user) {
      promises.push(ordersManager.loadOrders());
    }

    await Promise.allSettled(promises);
  }

  updateUI() {
    // –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const user = telegram.getUser();
    if (user && this.userNameSpan) {
      const displayName = user.first_name || user.username || `ID: ${user.id}`;
      this.userNameSpan.textContent = displayName;
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    this.showMainInterface();
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    this.showPage(this.currentPage);
  }

  showMainInterface() {
    if (this.header) this.header.classList.remove('hidden');
    if (this.nav) this.nav.classList.remove('hidden');
    if (this.mainContent) this.mainContent.classList.remove('hidden');
  }

  hideLoadingScreen() {
    if (this.loadingScreen) {
      this.loadingScreen.style.opacity = '0';
      setTimeout(() => {
        this.loadingScreen.style.display = 'none';
      }, 300);
    }
  }

  showInitError(error) {
    if (this.loadingScreen) {
      this.loadingScreen.innerHTML = `
        <div style="text-align: center; padding: 24px;">
          <div style="font-size: 64px; margin-bottom: 16px;">üòï</div>
          <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
          <p style="color: var(--tg-theme-hint-color); margin-bottom: 24px;">
            ${error.message || '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫'}
          </p>
          <button onclick="location.reload()" 
                  style="background: var(--primary-color); color: white; border: none; border-radius: 8px; padding: 12px 24px; cursor: pointer;">
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      `;
    }
  }

  showPage(pageName) {
    if (!pageName) return;

    this.currentPage = pageName;

    // –û–±–Ω–æ–≤–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    this.navButtons.forEach(btn => {
      btn.classList.toggle('active', btn.dataset.page === pageName);
    });

    // –ü–æ–∫–∞–∑–∞—Ç—å –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    this.pages.forEach(page => {
      page.classList.toggle('active', page.id === `${pageName}-page`);
    });

    // –í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    this.onPageShow(pageName);

    utils.log('–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É:', pageName);
  }

  onPageShow(pageName) {
    switch (pageName) {
      case 'menu':
        // –û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        break;
        
      case 'cart':
        // –û–±–Ω–æ–≤–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
        cart.updateCartDisplay();
        break;
        
      case 'orders':
        // –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–∫–∞–∑—ã
        if (telegram.getUser()) {
          ordersManager.loadOrders();
          ordersManager.startStatusPolling();
        }
        break;
    }
  }

  onAppVisible() {
    // –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    if (this.currentPage === 'orders') {
      ordersManager.refreshOrders();
    }
    
    // –û–±–Ω–æ–≤–∏—Ç—å –∫—ç—à –º–µ–Ω—é –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    const now = Date.now();
    const lastMenuUpdate = localStorage.getItem('last-menu-update');
    if (!lastMenuUpdate || (now - parseInt(lastMenuUpdate)) > CONFIG.CACHE_DURATION) {
      menuManager.refreshMenu();
      localStorage.setItem('last-menu-update', now.toString());
    }
  }

  // –ú–µ—Ç–æ–¥—ã –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  getCurrentPage() {
    return this.currentPage;
  }

  isReady() {
    return this.isInitialized;
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ (–æ–±—â–∏–π –º–µ—Ç–æ–¥)
  showModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
      modal.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
    }
  }

  // –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ (–æ–±—â–∏–π –º–µ—Ç–æ–¥)
  hideModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
      modal.classList.add('hidden');
      document.body.style.overflow = '';
    }
  }

  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  async reload() {
    utils.log('–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    
    // –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à–∏
    api.clearCache();
    
    // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å polling
    ordersManager.stopStatusPolling();
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
    this.showMainInterface();
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
    await this.loadInitialData();
    
    // –û–±–Ω–æ–≤–∏—Ç—å UI
    this.updateUI();
    
    utils.showToast('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ', 'success');
  }

  // –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  exit() {
    // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å polling
    ordersManager.stopStatusPolling();
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    localStorage.setItem('last-visit', Date.now().toString());
    
    // –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    telegram.close();
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
  async updateDynamicContent(language) {
    console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —è–∑—ã–∫–∞: ${language}`);

    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é —Å –Ω–æ–≤—ã–º —è–∑—ã–∫–æ–º
    if (window.menuManager) {
      await window.menuManager.loadMenu(language);
      window.menuManager.updateCategoryButtons();
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É —Å –Ω–æ–≤—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
    if (window.cartManager) {
      await window.cartManager.updateItemNames(language);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–∫–∞–∑—ã —Å –Ω–æ–≤—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
    if (window.ordersManager) {
      await window.ordersManager.updateOrdersDisplay(language);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç
    const priceElements = document.querySelectorAll('[data-price]');
    priceElements.forEach(el => {
      const price = el.dataset.price;
      if (price) {
        el.textContent = window.i18n.formatCurrency(parseFloat(price));
      }
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç
    const dateElements = document.querySelectorAll('[data-date]');
    dateElements.forEach(el => {
      const timestamp = el.dataset.date;
      if (timestamp) {
        const date = new Date(parseInt(timestamp));
        el.textContent = window.i18n.formatDateTime(date);
      }
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º placeholder –≤ –ø–æ–∏—Å–∫–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ
    const searchInput = document.querySelector('#search-input');
    if (searchInput) {
      searchInput.placeholder = window.i18n.t('menu.search');
    }

    console.log(`UI –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —è–∑—ã–∫–∞: ${language}`);
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
  // –°–æ–∑–¥–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  window.app = new App();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
window.addEventListener('load', () => {
  utils.log('–í—Å–µ —Ä–µ—Å—É—Ä—Å—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
window.addEventListener('error', (e) => {
  if (e.target !== window) {
    utils.logError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Å—É—Ä—Å–∞:', e.target.src || e.target.href);
  }
});

// PWA support (–¥–ª—è –±—É–¥—É—â–µ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
if ('serviceWorker' in navigator && CONFIG.DEBUG === false) {
  window.addEventListener('load', () => {
    navigator.serviceWorker.register('/sw.js')
      .then(registration => {
        utils.log('Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', registration.scope);
      })
      .catch(error => {
        utils.logError('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker:', error);
      });
  });
}