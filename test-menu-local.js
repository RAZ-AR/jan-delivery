// –¢–µ—Å—Ç –º–µ–Ω—é —Å –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü–µ–π –ª–æ–∫–∞–ª—å–Ω–æ
require('dotenv').config({ path: './.env' });

async function testMenu() {
  try {
    console.log('üçΩÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–µ–Ω—é —Å –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü–µ–π...');
    
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –º–µ–Ω—é –∏–∑ backend
    const menuService = require('./backend/src/services/menuService.js');
    
    console.log('üìã –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é –Ω–∞ —Ä—É—Å—Å–∫–æ–º...');
    const menuRu = await menuService.getAllItems('ru');
    console.log(`‚úÖ –ú–µ–Ω—é RU: ${menuRu.length} –±–ª—é–¥`);
    
    if (menuRu.length > 0) {
      console.log('üìÑ –ü—Ä–∏–º–µ—Ä –±–ª—é–¥–∞:', {
        id: menuRu[0].id,
        name: menuRu[0].name,
        category: menuRu[0].category,
        subCategory: menuRu[0].subCategory,
        price: menuRu[0].price
      });
    }
    
    console.log('\nüìã –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
    const categories = await menuService.getCategoriesWithSubCategories('ru');
    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:', Object.keys(categories));
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    Object.keys(categories).forEach(cat => {
      const subCats = categories[cat].subCategories;
      console.log(`   ${cat}: ${subCats.length > 0 ? subCats.join(', ') : '–±–µ–∑ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π'}`);
    });
    
    console.log('\nüåç –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ —è–∑—ã–∫–∏...');
    const menuEn = await menuService.getAllItems('en');
    const menuSr = await menuService.getAllItems('sr');
    
    console.log(`‚úÖ –ú–µ–Ω—é EN: ${menuEn.length} –±–ª—é–¥`);
    console.log(`‚úÖ –ú–µ–Ω—é SR: ${menuSr.length} –±–ª—é–¥`);
    
    if (menuEn.length > 0) {
      console.log('üìÑ –ü—Ä–∏–º–µ—Ä –±–ª—é–¥–∞ EN:', {
        name: menuEn[0].name,
        category: menuEn[0].category,
        subCategory: menuEn[0].subCategory
      });
    }
    
    if (menuSr.length > 0) {
      console.log('üìÑ –ü—Ä–∏–º–µ—Ä –±–ª—é–¥–∞ SR:', {
        name: menuSr[0].name,
        category: menuSr[0].category,
        subCategory: menuSr[0].subCategory
      });
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

testMenu();